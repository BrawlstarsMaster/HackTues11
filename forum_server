//npm init -y
//npm install express pg cors body-parser dotenv

require("dotenv").config();
const express = require("express");
const cors = require("cors");
const bodyParser = require("body-parser");
const { Pool } = require("pg");

const app = express();
app.use(cors());
app.use(bodyParser.json());

const pool = new Pool({
    user: "your_db_user",
    host: "your_db_host",
    database: "your_db_name",
    password: "your_db_password",
    port: 5432,
});

// ✅ Save Doctor Visit Form Data
app.post("/api/doctor-visit", async (req, res) => {
    try {
        const { patientId, diagnosis, visitCost, needFollowUp, followUpDate, recoveryNotes, preparations, prescriptions } = req.body;

        // Insert into doctor_visits table
        const visitResult = await pool.query(
            `INSERT INTO doctor_visits (patient_id, diagnosis, visit_cost, need_followup, followup_date, recovery_notes, preparations) 
             VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING id`,
            [patientId, diagnosis, visitCost, needFollowUp, followUpDate, recoveryNotes, preparations]
        );

        const visitId = visitResult.rows[0].id;

        // Insert prescriptions
        if (prescriptions.length > 0) {
            const prescriptionQueries = prescriptions.map(presc => {
                return pool.query(
                    `INSERT INTO prescriptions (visit_id, medicine, dosage, frequency, duration)
                     VALUES ($1, $2, $3, $4, $5)`,
                    [visitId, presc.medicine, presc.dosage, presc.frequency, presc.duration]
                );
            });
            await Promise.all(prescriptionQueries);
        }

        res.status(201).json({ message: "Doctor visit saved!", visitId });
    } catch (error) {
        console.error("Error saving visit summary:", error);
        res.status(500).json({ error: "Database error" });
    }
});

// ✅ Retrieve All Doctor Visit Forms (For Main Page)
app.get("/api/doctor-visits", async (req, res) => {
    try {
        const result = await pool.query(
            `SELECT v.*, 
             json_agg(json_build_object('medicine', p.medicine, 'dosage', p.dosage, 'frequency', p.frequency, 'duration', p.duration)) 
             AS prescriptions FROM doctor_visits v
             LEFT JOIN prescriptions p ON v.id = p.visit_id
             GROUP BY v.id`
        );

        res.json(result.rows);
    } catch (error) {
        console.error("Error fetching doctor visits:", error);
        res.status(500).json({ error: "Database error" });
    }
});

// Start Server
const PORT = process.env.PORT || 5000;
app.listen(PORT, () => {
    console.log(`Server running on port ${PORT}`);
});
